# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Flutter Packages CI

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/flutter_packages.yaml"
      - "pkgs/**"
      - "examples/**"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/flutter_packages.yaml"
      - "pkgs/**"
      - "examples/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      # A JSON array of the names of changed packages, e.g., '["pkgs_flutter_genui"]'
      changed_package_names: ${{ steps.filter.outputs.changes }}
      # A JSON map from package name to package path, e.g., '{"pkgs_flutter_genui": "pkgs/flutter_genui"}'
      package_map: ${{ steps.generate_package_data.outputs.package_map }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Generate package data
        id: generate_package_data
        run: |
          # Find all directories containing pubspec.yaml in pkgs and examples.
          DIRS=$(find pkgs examples -name pubspec.yaml -not -path "*/.dart_tool/*" -exec dirname {} \;)

          FILTER_STRING=""
          JSON_MAP="{"
          FIRST=true
          for dir in $DIRS; do
            if [ "$FIRST" = false ]; then
              JSON_MAP="$JSON_MAP,"
            fi
            FIRST=false
            # The name for the matrix and filter key (path with '/' -> '_')
            package_name=$(echo "$dir" | tr '/' '_')
            # The actual path to the package
            package_path="$dir"

            JSON_MAP="$JSON_MAP\"$package_name\":\"$package_path\""
            FILTER_STRING="$FILTER_STRING  $package_name:\n    - '$package_path/**'\n"
          done
          JSON_MAP="$JSON_MAP}"

          echo "package_map=$JSON_MAP" >> $GITHUB_OUTPUT
          echo "filters=<<EOF" >> $GITHUB_OUTPUT
          echo -e "$FILTER_STRING" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: ${{ steps.generate_package_data.outputs.filters }}

  analyze_and_test:
    needs: changes
    # Only run if the 'changes' job has found changed packages.
    if: github.repository == 'flutter/genui' && ${{ needs.changes.outputs.changed_package_names != '[]' }}
    name: Test ${{ matrix.package_name }} on ${{ matrix.os }} with Flutter ${{ matrix.flutter_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # The list of package names is dynamically set from the 'changes' job.
        package_name: ${{ fromJson(needs.changes.outputs.changed_package_names) }}
        flutter_version: [stable, beta, master]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Set package path
        id: set_path
        # Look up the path from the map using the package name from the matrix
        run: echo "path=${{ fromJson(needs.changes.outputs.package_map)[matrix.package_name] }}" >> $GITHUB_OUTPUT
      - uses: actions/setup-java@17f84c3641ba7b8f6deff6309fc4c864478f5d62
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@e938fdf56512cc96ef2f93601a5a40bde3801046
        with:
          channel: ${{ matrix.flutter_version }}
      - name: Cache Pub dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Install dependencies
        run: dart pub get
        working-directory: ${{ steps.set_path.outputs.path }}
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        working-directory: ${{ steps.set_path.outputs.path }}
      - name: Analyze code
        run: flutter analyze --fatal-infos
        working-directory: ${{ steps.set_path.outputs.path }}
      - name: Run Flutter tests
        run: |-
          [[ -d test ]] && flutter test --test-randomize-ordering-seed=random
        working-directory: ${{ steps.set_path.outputs.path }}
